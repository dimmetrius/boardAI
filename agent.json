{
    "llm_chain": {
        "memory": null,
        "verbose": false,
        "prompt": {
            "input_variables": [
                "input",
                "agent_scratchpad"
            ],
            "output_parser": null,
            "partial_variables": {},
            "template": "Answer the following questions as best you can. You have access to the following tools:\n\nrequests_get: A portal to the internet. Use this when you need to get specific content from a website. Input should be a  url (i.e. https://www.google.com). The output will be the text response of the GET request.\nrequests_post: Use this when you want to POST to a website.\n    Input should be a json string with two keys: \"url\" and \"data\".\n    The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \n    key-value pairs you want to POST to the url.\n    Be careful to always use double quotes for strings in the json string\n    The output will be the text response of the POST request.\n    \nrequests_patch: Use this when you want to PATCH to a website.\n    Input should be a json string with two keys: \"url\" and \"data\".\n    The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \n    key-value pairs you want to PATCH to the url.\n    Be careful to always use double quotes for strings in the json string\n    The output will be the text response of the PATCH request.\n    \nrequests_put: Use this when you want to PUT to a website.\n    Input should be a json string with two keys: \"url\" and \"data\".\n    The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of \n    key-value pairs you want to PUT to the url.\n    Be careful to always use double quotes for strings in the json string.\n    The output will be the text response of the PUT request.\n    \nrequests_delete: A portal to the internet. Use this when you need to make a DELETE request to a URL. Input should be a specific url, and the output will be the text response of the DELETE request.\nschoolmenuplugin: Call this tool to get the OpenAPI spec (and usage guide) for interacting with the School Menu Plugin API. You should only call this ONCE! What is the School Menu Plugin API useful for? A plugin that allows the user analize School Menu using ChatGPT.\n\nUse the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [requests_get, requests_post, requests_patch, requests_put, requests_delete, schoolmenuplugin]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nBegin!\n\nQuestion: {input}\nThought:{agent_scratchpad}",
            "template_format": "f-string",
            "validate_template": true,
            "_type": "prompt"
        },
        "llm": {
            "model_name": "gpt-3.5-turbo",
            "model": "gpt-3.5-turbo",
            "request_timeout": null,
            "max_tokens": null,
            "stream": false,
            "n": 1,
            "temperature": 0.7,
            "_type": "openai-chat"
        },
        "output_key": "text",
        "_type": "llm_chain"
    },
    "output_parser": {
        "_type": "mrkl"
    },
    "allowed_tools": [
        "requests_get",
        "requests_post",
        "requests_patch",
        "requests_put",
        "requests_delete",
        "schoolmenuplugin"
    ],
    "_type": "AgentType.ZERO_SHOT_REACT_DESCRIPTION"
}